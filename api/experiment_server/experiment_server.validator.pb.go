// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: experiment_server/experiment_server.proto

package experiment_server

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "github.com/PsychologicalExperiment/backEnd/api/api_common"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *SubjectRecordInfo) Validate() error {
	return nil
}
func (this *ExperimentInfo) Validate() error {
	return nil
}
func (this *CreateExperimentReq) Validate() error {
	if !(this.Price > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Price", fmt.Errorf(`value '%v' must be greater than '0'`, this.Price))
	}
	return nil
}
func (this *CreateExperimentResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	return nil
}
func (this *UpdateExperimentReq) Validate() error {
	return nil
}
func (this *UpdateExperimentResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	return nil
}
func (this *QueryExperimentReq) Validate() error {
	return nil
}
func (this *QueryExperimentResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	if this.ExpInfo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpInfo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpInfo", err)
		}
	}
	for _, item := range this.SubjectRecords {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SubjectRecords", err)
			}
		}
	}
	return nil
}
func (this *QueryExperimentListReq) Validate() error {
	return nil
}
func (this *QueryExperimentListResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	for _, item := range this.ExpInfoList {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("ExpInfoList", err)
			}
		}
	}
	return nil
}
func (this *CreateSubjectRecordReq) Validate() error {
	return nil
}
func (this *CreateSubjectRecordResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	return nil
}
func (this *UpdateSubjectRecordReq) Validate() error {
	return nil
}
func (this *UpdateSubjectRecordResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	return nil
}
func (this *QuerySubjectRecordReq) Validate() error {
	return nil
}
func (this *QuerySubjectRecordResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	if this.SubjectRecord != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SubjectRecord); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SubjectRecord", err)
		}
	}
	return nil
}
func (this *QuerySubjectRecordListReq) Validate() error {
	return nil
}
func (this *QuerySubjectRecordListResp) Validate() error {
	if this.CommonRsp != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CommonRsp); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CommonRsp", err)
		}
	}
	for _, item := range this.SubjectRecordList {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SubjectRecordList", err)
			}
		}
	}
	return nil
}
