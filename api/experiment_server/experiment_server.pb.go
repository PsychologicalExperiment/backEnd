// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: api/experiment_server/experiment_server.proto

package experiment_server

import (
	api_common "github.com/PsychologicalExperiment/backEnd/api/api_common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubjectRecordStatus int32

const (
	SubjectRecordStatus_INIT     SubjectRecordStatus = 0
	SubjectRecordStatus_APPROVED SubjectRecordStatus = 1
	SubjectRecordStatus_TIMEOUT  SubjectRecordStatus = 2
	SubjectRecordStatus_RETURNED SubjectRecordStatus = 3
)

// Enum value maps for SubjectRecordStatus.
var (
	SubjectRecordStatus_name = map[int32]string{
		0: "INIT",
		1: "APPROVED",
		2: "TIMEOUT",
		3: "RETURNED",
	}
	SubjectRecordStatus_value = map[string]int32{
		"INIT":     0,
		"APPROVED": 1,
		"TIMEOUT":  2,
		"RETURNED": 3,
	}
)

func (x SubjectRecordStatus) Enum() *SubjectRecordStatus {
	p := new(SubjectRecordStatus)
	*p = x
	return p
}

func (x SubjectRecordStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubjectRecordStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_experiment_server_experiment_server_proto_enumTypes[0].Descriptor()
}

func (SubjectRecordStatus) Type() protoreflect.EnumType {
	return &file_api_experiment_server_experiment_server_proto_enumTypes[0]
}

func (x SubjectRecordStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubjectRecordStatus.Descriptor instead.
func (SubjectRecordStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_experiment_server_experiment_server_proto_rawDescGZIP(), []int{0}
}

type SubjectRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpId          string              `protobuf:"bytes,1,opt,name=exp_id,json=expId,proto3" json:"exp_id,omitempty"`
	UserId         string              `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartTime      string              `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	TimeTaken      string              `protobuf:"bytes,4,opt,name=time_taken,json=timeTaken,proto3" json:"time_taken,omitempty"`
	CompletionCode string              `protobuf:"bytes,5,opt,name=completion_code,json=completionCode,proto3" json:"completion_code,omitempty"`
	Status         SubjectRecordStatus `protobuf:"varint,6,opt,name=status,proto3,enum=grpc.psychological_experiment.experiment_server.SubjectRecordStatus" json:"status,omitempty"`
}

func (x *SubjectRecord) Reset() {
	*x = SubjectRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_experiment_server_experiment_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubjectRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectRecord) ProtoMessage() {}

func (x *SubjectRecord) ProtoReflect() protoreflect.Message {
	mi := &file_api_experiment_server_experiment_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectRecord.ProtoReflect.Descriptor instead.
func (*SubjectRecord) Descriptor() ([]byte, []int) {
	return file_api_experiment_server_experiment_server_proto_rawDescGZIP(), []int{0}
}

func (x *SubjectRecord) GetExpId() string {
	if x != nil {
		return x.ExpId
	}
	return ""
}

func (x *SubjectRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SubjectRecord) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SubjectRecord) GetTimeTaken() string {
	if x != nil {
		return x.TimeTaken
	}
	return ""
}

func (x *SubjectRecord) GetCompletionCode() string {
	if x != nil {
		return x.CompletionCode
	}
	return ""
}

func (x *SubjectRecord) GetStatus() SubjectRecordStatus {
	if x != nil {
		return x.Status
	}
	return SubjectRecordStatus_INIT
}

type QuerySubjectRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// experiment_id
	ExpId string `protobuf:"bytes,1,opt,name=exp_id,json=expId,proto3" json:"exp_id,omitempty"`
	//
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *QuerySubjectRecordReq) Reset() {
	*x = QuerySubjectRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_experiment_server_experiment_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySubjectRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubjectRecordReq) ProtoMessage() {}

func (x *QuerySubjectRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_experiment_server_experiment_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubjectRecordReq.ProtoReflect.Descriptor instead.
func (*QuerySubjectRecordReq) Descriptor() ([]byte, []int) {
	return file_api_experiment_server_experiment_server_proto_rawDescGZIP(), []int{1}
}

func (x *QuerySubjectRecordReq) GetExpId() string {
	if x != nil {
		return x.ExpId
	}
	return ""
}

func (x *QuerySubjectRecordReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type QuerySubjectRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonRsp         *api_common.CommonRsp `protobuf:"bytes,1,opt,name=common_rsp,json=commonRsp,proto3" json:"common_rsp,omitempty"`
	SubjectRecordList []*SubjectRecord      `protobuf:"bytes,2,rep,name=subject_record_list,json=subjectRecordList,proto3" json:"subject_record_list,omitempty"`
}

func (x *QuerySubjectRecordResp) Reset() {
	*x = QuerySubjectRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_experiment_server_experiment_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySubjectRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySubjectRecordResp) ProtoMessage() {}

func (x *QuerySubjectRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_experiment_server_experiment_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySubjectRecordResp.ProtoReflect.Descriptor instead.
func (*QuerySubjectRecordResp) Descriptor() ([]byte, []int) {
	return file_api_experiment_server_experiment_server_proto_rawDescGZIP(), []int{2}
}

func (x *QuerySubjectRecordResp) GetCommonRsp() *api_common.CommonRsp {
	if x != nil {
		return x.CommonRsp
	}
	return nil
}

func (x *QuerySubjectRecordResp) GetSubjectRecordList() []*SubjectRecord {
	if x != nil {
		return x.SubjectRecordList
	}
	return nil
}

var File_api_experiment_server_experiment_server_proto protoreflect.FileDescriptor

var file_api_experiment_server_experiment_server_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x73, 0x79, 0x63, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x84, 0x02, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x6b, 0x65,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x70, 0x73, 0x79, 0x63, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x78, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xdc, 0x01, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x72, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x73, 0x79, 0x63, 0x68, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x73, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x6e, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x73, 0x79, 0x63, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x11, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x2a, 0x48, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x32, 0xb8, 0x01, 0x0a, 0x11, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0xa2, 0x01, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x73, 0x79, 0x63,
	0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x47, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x70, 0x73, 0x79, 0x63, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61,
	0x6c, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x73, 0x79, 0x63, 0x68, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61,
	0x6c, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x45, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_experiment_server_experiment_server_proto_rawDescOnce sync.Once
	file_api_experiment_server_experiment_server_proto_rawDescData = file_api_experiment_server_experiment_server_proto_rawDesc
)

func file_api_experiment_server_experiment_server_proto_rawDescGZIP() []byte {
	file_api_experiment_server_experiment_server_proto_rawDescOnce.Do(func() {
		file_api_experiment_server_experiment_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_experiment_server_experiment_server_proto_rawDescData)
	})
	return file_api_experiment_server_experiment_server_proto_rawDescData
}

var file_api_experiment_server_experiment_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_experiment_server_experiment_server_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_experiment_server_experiment_server_proto_goTypes = []interface{}{
	(SubjectRecordStatus)(0),       // 0: grpc.psychological_experiment.experiment_server.SubjectRecordStatus
	(*SubjectRecord)(nil),          // 1: grpc.psychological_experiment.experiment_server.SubjectRecord
	(*QuerySubjectRecordReq)(nil),  // 2: grpc.psychological_experiment.experiment_server.QuerySubjectRecordReq
	(*QuerySubjectRecordResp)(nil), // 3: grpc.psychological_experiment.experiment_server.QuerySubjectRecordResp
	(*api_common.CommonRsp)(nil),   // 4: grpc.psychological_experiment.api_common.CommonRsp
}
var file_api_experiment_server_experiment_server_proto_depIdxs = []int32{
	0, // 0: grpc.psychological_experiment.experiment_server.SubjectRecord.status:type_name -> grpc.psychological_experiment.experiment_server.SubjectRecordStatus
	4, // 1: grpc.psychological_experiment.experiment_server.QuerySubjectRecordResp.common_rsp:type_name -> grpc.psychological_experiment.api_common.CommonRsp
	1, // 2: grpc.psychological_experiment.experiment_server.QuerySubjectRecordResp.subject_record_list:type_name -> grpc.psychological_experiment.experiment_server.SubjectRecord
	2, // 3: grpc.psychological_experiment.experiment_server.ExperimentService.QueryExperiment:input_type -> grpc.psychological_experiment.experiment_server.QuerySubjectRecordReq
	3, // 4: grpc.psychological_experiment.experiment_server.ExperimentService.QueryExperiment:output_type -> grpc.psychological_experiment.experiment_server.QuerySubjectRecordResp
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_experiment_server_experiment_server_proto_init() }
func file_api_experiment_server_experiment_server_proto_init() {
	if File_api_experiment_server_experiment_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_experiment_server_experiment_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubjectRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_experiment_server_experiment_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySubjectRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_experiment_server_experiment_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySubjectRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_experiment_server_experiment_server_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_experiment_server_experiment_server_proto_goTypes,
		DependencyIndexes: file_api_experiment_server_experiment_server_proto_depIdxs,
		EnumInfos:         file_api_experiment_server_experiment_server_proto_enumTypes,
		MessageInfos:      file_api_experiment_server_experiment_server_proto_msgTypes,
	}.Build()
	File_api_experiment_server_experiment_server_proto = out.File
	file_api_experiment_server_experiment_server_proto_rawDesc = nil
	file_api_experiment_server_experiment_server_proto_goTypes = nil
	file_api_experiment_server_experiment_server_proto_depIdxs = nil
}
